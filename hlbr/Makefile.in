# PATHs

PREFIX =
CONFIG_DIR =		$(PREFIX)/etc/hlbr
OLD_CONFIG_DIR =	$(PREFIX)/etc/hlbr.old
LOG_DIR =		$(PREFIX)/var/log/hlbr
OLD_LOG_DIR =		$(PREFIX)/var/log/hlbr.old
BIN_DIR =		$(PREFIX)/usr/sbin
INIT_DIR_1 =		$(PREFIX)/etc/init.d
INIT_DIR_2 =		$(PREFIX)/etc/rc.d/init.d
CRON_DIR =		$(PREFIX)/etc/cron.weekly
HEADER_DIR =		$(PREFIX)/usr/lib/hlbr
MAN_DIR =		$(PREFIX)/usr/share/man/man8
RULES_DIR =		$(CONFIG_DIR)/rules

# GCC Options

DEBUG =			-g -Wall
CC =			gcc -g
EXTRA_LIBS =		-lpcre

HLBR_OBJECTS= \
  engine/hlbr.o \
  engine/alert_limit.o \
  engine/bits.o \
  engine/parse_config.o \
  engine/parse_rules.o \
  engine/main_loop.o \
  engine/session.o \
  engine/jtree.o \
  engine/num_list.o \
  engine/message.o \
  engine/cache.o \
  engine/regex.o \
  engine/hlbrlib.o \
  engine/url.o \
  engine/logfile.o \
  packets/packet.o \
  packets/packet_linux_raw.o \
  packets/packet_obsd_bpf.o \
  packets/packet_osx_bpf.o \
  packets/packet_tcpdump.o \
  packets/packet_solaris_dlpi.o \
  decoders/decode.o \
  decoders/decode_interface.o \
  decoders/decode_ethernet.o \
  decoders/decode_ip.o \
  decoders/decode_ip_defrag.o \
  decoders/decode_icmp.o \
  decoders/decode_udp.o \
  decoders/decode_tcp.o \
  decoders/decode_http.o \
  decoders/decode_dns.o \
  decoders/decode_arp.o \
  tests/test.o \
  tests/test_interface_name.o \
  tests/test_ethernet_type.o \
  tests/test_ethernet_src.o \
  tests/test_ethernet_dst.o \
  tests/test_ip_src.o \
  tests/test_ip_dst.o \
  tests/test_ip_proto.o \
  tests/test_ip_ttl.o \
  tests/test_ip_check.o \
  tests/test_icmp_type.o \
  tests/test_icmp_code.o \
  tests/test_tcp_port.o \
  tests/test_tcp_src.o \
  tests/test_tcp_dst.o \
  tests/test_tcp_content.o \
  tests/test_tcp_nocase.o \
  tests/test_tcp_listcontent.o \
  tests/test_tcp_listnocase.o \
  tests/test_tcp_flags.o \
  tests/test_tcp_offset.o \
  tests/test_tcp_regex.o \
  tests/test_http_content.o \
  tests/test_http_method.o \
  tests/test_http_nocase.o \
  tests/test_http_regex.o \
  tests/test_udp_regex.o \
  tests/test_udp_src.o \
  tests/test_udp_dst.o \
  tests/test_udp_content.o \
  tests/test_udp_nocase.o \
  actions/action.o \
  actions/action_drop.o \
  actions/action_alert_console.o \
  actions/action_alert_file.o \
  actions/action_dump_packet.o \
  actions/action_route_sip.o \
  actions/action_bns.o \
  actions/action_alert_syslog.o \
  actions/action_alert_email.o \
  actions/action_alert_socket.o \
  actions/action_alert_listensocket.o \
  routes/route.o \
  routes/route_macfilter.o \
  routes/route_simple_bridge.o \
  routes/route_dip.o \
  routes/route_sip.o \
  routes/route_broadcast.o \
  routes/route_arp.o \
  routes/route_interface.o \
  routes/route_bns.o
    
all: hlbr

clean:
	cd engine; make clean
	cd packets; make clean
	cd decoders; make clean
	cd tests; make clean
	cd actions; make clean
	cd routes; make clean
	rm -f hlbr

reconfigure: clean
	rm -f config.h
	rm -f Makefile *.old

hlbr: config.h $(HLBR_OBJECTS)
	cd engine;make
	cd packets; make
	cd decoders; make
	cd tests; make
	cd actions; make 
	cd routes; make
	$(CC) -o hlbr $(DEBUG) $(HLBR_OBJECTS) $(THREAD) $(LIB_DL) $(EXTRA_LIBS) $(LATE_BINDING)
	#
	# ---------------------------------------
	# Execute "# make install" para instalar.
	# Run "# make install" to install.
	# ---------------------------------------
	#

install: pre-install $(INSTALL_LANG)

pre-install:
	if [ -d $(OLD_CONFIG_DIR) ]; then rm -rf $(OLD_CONFIG_DIR); fi
	if [ -d $(CONFIG_DIR) ]; then mv -f $(CONFIG_DIR) $(OLD_CONFIG_DIR); fi
	mkdir -p $(RULES_DIR)
	if [ -d $(OLD_LOG_DIR) ]; then rm -rf $(OLD_LOG_DIR); fi
	if [ -d $(LOG_DIR) ]; then mv -f $(LOG_DIR) $(OLD_LOG_DIR); fi
	mkdir $(LOG_DIR)
	if [ -e $(BIN_DIR)/hlbr ]; then rm -f $(BIN_DIR)/hlbr; fi
	if [ -d $(INIT_DIR_1) ]; then cp -f scripts/hlbr.init $(INIT_DIR_1)/hlbr; fi
	if [ -d $(INIT_DIR_2) ]; then cp -f scripts/hlbr.init $(INIT_DIR_2)/hlbr; fi
	if [ -d $(CRON_DIR) ]; then cp -f scripts/hlbr.rotate $(CRON_DIR)/hlbr; fi
	cp hlbr $(BIN_DIR)
	cp empty.rules hlbr.rules $(CONFIG_DIR)
	cp rules/*.rules $(RULES_DIR)
	if [ ! -d $(HEADER_DIR) ]; then mkdir $(HEADER_DIR); cp -f hlbr.dump.header $(HEADER_DIR); fi
	if [ ! -e $(MAN_DIR)/hlbr.8 ]; then cp man/hlbr.8 $(MAN_DIR); fi
	if [ -d $(PREFIX)/var/lib/hlbr ]; then rm -rf $(PREFIX)/var/lib/hlbr; fi

portuguese:
	cp hlbr.config.pt_BR $(CONFIG_DIR)/hlbr.config
	#
	# ---------------------------------------------------------
	# HLBR instalado.
	# O arquivo de configuracao e as regras estao em /etc/hlbr.
	#
	# Execute "# make uninstall" para desinstalar.
	# ---------------------------------------------------------
	#

english:
	cp hlbr.config.en $(CONFIG_DIR)/hlbr.config
	#
	# --------------------------------------------------
	# HLBR has been installed.
	# The configuration file and rules are in /etc/hlbr.
	#
	# Run "# make uninstall" to uninstall.
	# --------------------------------------------------
	#

uninstall: 
	# 
	# Removendo arquivos de configuracao / Removing configuration files
	#
	if [ -d $(CONFIG_DIR) ]; then rm -rf $(CONFIG_DIR); fi
	if [ -d $(OLD_CONFIG_DIR) ]; then rm -rf $(OLD_CONFIG_DIR); fi
	#
	# Removendo logs / Removing logs
	#
	if [ -d $(LOG_DIR) ]; then rm -rf $(LOG_DIR); fi
	if [ -d $(OLD_LOG_DIR) ]; then rm -rf $(OLD_LOG_DIR); fi
	#
	# Removendo daemon / Removing daemon
	#
	if [ -e $(BIN_DIR)/hlbr ]; then rm -f $(BIN_DIR)/hlbr; fi
	if [ -e $(INIT_DIR_1)/hlbr ]; then rm -f $(INIT_DIR_1)/hlbr; fi
	if [ -e $(INIT_DIR_2)/hlbr ]; then rm -f $(INIT_DIR_2)/hlbr; fi
	#
	# Removendo cron, libs e manual / Removing cron, libs and man page
	#
	if [ -e $(CRON_DIR)/hlbr ]; then rm -f $(CRON_DIR)/hlbr; fi
	if [ -d $(HEADER_DIR) ]; then rm -rf $(HEADER_DIR); fi
	if [ -e $(MAN_DIR)/hlbr.8 ]; then rm -f $(MAN_DIR)/hlbr.8; fi
	#
	# -------------------------------------------------
	# HLBR foi desinstalado. HLBR has been uninstalled.
	# -------------------------------------------------
	#

install-daemon:
#	This target is destinated to development tests only.
	cp -f hlbr $(BIN_DIR)
