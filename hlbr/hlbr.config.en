#################################
#################################
##                             ##
## HLBR - Hogwash Light BR     ##
##                             ## 
## Configuration file          ##
##                             ##
#################################
#################################





############################################################################
# General Configuration Section
#
# This section only requires modifications if you want to centralize the
# logs. Usually you won't need to change this section.
#
# Name=sensor name
#
#    Identifies the sensor (computer running the IPS). Useful if you want
#    to centralize the logs.
#   
# ID=sensor ID
#
#    As with the Name, ID also is useful to identify the sensor in the logs.
#
# Threads=1 / 0
#
#    If threads is set to 0, HLBR will run only one thread to control the
#    daemon and the network interfaces. if set to 1, n+1 threads will be
#    created, n being the number of network interfaces used.
#
# AlertHeader=
#
#    Sets the format used in the log file. Possible values are:
#    %sip (source ip), %dip (ip destination), %sp (source port), 
#    %dp (destination port), %d (day), %m (month), %y (year), %h (hour),
#    %min (minute), %s (seconds), %usec (microseconds), %pn (sequential
#    packet number), %ac (alert number - starts with 1 every time HLBR is
#    restarted).
############################################################################




<system>
Name=HLBR_1
ID=1
Threads=1
AlertHeader=%ac %m/%d/%y %h:%min:%s %sip:%sp->%dip:%dp
</system>





############################################################################
# Interfaces Section
#
# This section define which network interfaces will be used.
# There is no need of defining interfaces there won't be used in the bridge.
#
# interface eth0 / ppp0 / wlan0 / other
#
#    Defines the network interface.
#
# Type=linux_raw / obsd_bpf / osx_bpf / solaris_dlpi / tcpdump
#
#    Depends of the OS used. These are supported: Linux, OpenBSD, MacOS X
#    and Solaris. Also, you can use the tcpdump option to simulate network
#    traffic from a pcap file (generated by tcpdump, Ethereal or the dump log
#    from HLBR).
#
# Proto=Ethernet
#
#    Defines the layer 2 (OSI) protocol to be used. The only one currently
#    supported is Ethernet.
#############################################################################




<interface eth0>
Type=linux_raw
Proto=Ethernet
</interface>

<interface eth1>
Type=linux_raw
Proto=Ethernet
</interface>




#############################################################################
# IP Lists Section
#
# IP Lists are used to associate names to address groups of hosts or 
# networks. These names can be used in the rules to specify sources and/or
# destinations for the rule. IP Lists exist to ease rule making. Direct IP
# addresses can be used in the rules, too.
#
# IP Lists can have host addresses, network addresses or names of other IP
# Lists already defined. An IP List can have any name. In the following 
# example, xxx and yyy are numbers (must be changed to real IPs, they're 
# letters below for security and as an example only).
#
# Remember you can create your own IP Lists and delete the ones below.
#############################################################################




<IPList www>
200.xxx.yyy.195
200.xxx.yyy.196
</list>

<IPList dns>
200.xxx.yyy.195
200.xxx.yyy.197
</list>

<IPList email>
200.xxx.yyy.198
</list>

<IPList firewall>
200.xxx.yyy.210
</list>

<IPList network>
200.xxx.yyy.192/26
</list>

<IPList others>
200.xxx.yyy.194
200.xxx.yyy.199
</list>

<IPList servers>
www
dns
email
firewall
others
200.xxx.yyy.209
</list>




############################################################################
# Actions Section
#
# This section defines the responses used when a packet with malicious 
# content is detected by a rule.
# 
# These are the possible options:
#
# response=alert console
#
#    Shows the log line at the terminal screen where HLBR is running.
#
# response=alert file(name_of_log_file)
#
#    Writes the log line in the specified file.
#
# response=alert syslog(facility, priority, options)
#
#    Defines a remote log server. (not tested yet)
#
# response=dump packet(dump_file)
#
#    Writes the malicious packet to the specified dump file, using the 
#    tcpdump (libpcap) format. This way we can analyse it in the future.
#
# response=email(host, from, to, subject)
#
#    Send every log event to the specified e-mail. (not tested yet)
#
# response=drop
#
#    Drops the malicious packet (doesn't reset or finalizes the connection).
#
# Note: the path to the log files can be defined in the options above or with
# the -l option (run hlbr without options for more info).
#############################################################################




<action action1>
response=alert file(/var/log/hlbr/hlbr.log)
response=dump packet(/var/log/hlbr/hlbr.dump)
response=drop
</action>

<action action2>
response=alert file(/var/log/hlbr/hlbr-2.log)
response=dump packet(/var/log/hlbr/hlbr-2.dump)
</action>

<action virus>
response=alert file(/var/log/hlbr/virus.log)
response=dump packet(/var/log/hlbr/virus.dump)
response=drop
</action>



############################################################################
# Routing Section
#
# This section defines how the bridging will be done, using the interfaces 
# previously defined.
#
# Possible options are:
#
# SBridge(interface_1, interface_2)
#
#    SBridge can put 2 interfaces (and only 2) in bridge mode. It's a quick
#    and easy method, creating a simple connection between the two interfaces
#    that passes forth all packets received.
#
# MacFilter(interface_1, interface_2, interface_3....)
#
#    MacFilter can be used with 2 or more network adapters. It uses the MAC 
#    address of a packet to discover to which interface it will go - thus
#    acting like a switch. MacBridge is slower than SBridge. However, it can
#    be used instead of SBridge, in the (rare) event you have problems with
#    it. When HLBR runs with this option, the very first packets can take some
#    seconds to pass through (because HLBR will be constructing the MAC table,
#    much like a real switch).
#
# Broadcast()
#    
#    Can be used together with the options above, in case Linux is duplicating
#    ARP packets. Not a common occurance. (not tested yet)
#
# SIP(interface or IP List)
#
#    Used with MacFilter to define by which interface a packet with a specific
#    source address must be sent. Useful when a packet have to pass through a
#    specific network in order to reach another and that isn't defined in the
#    network routers. (not tested yet)
#
# DIP(interface or IP List)
#
#    Same as SIP, but for a destination address. (not tested yet)
#
# Note: although that isn't a proper use, HLBR can be used as an IDS. To this,
#       just comment out all the routing section.
############################################################################




<routing>
SBridge(eth0, eth1)
</routing>

############################################################################
# Secao Decoder
#
# Decoders special config options
############################################################################

# decoder http
#
# Define, as a comma separated list of values, the methods that lay around
# your network

<decoder http>
OPTIONS,GET,HEAD,POST,PUT,DELETE,TRACE,CONNECT
#COPY,MOVE,PROPFIND,PROPPATCH,UNLOCK,LOCK,MKCOL,NOTIFY,POLL
#VERSION-CONTROL,REPORT,CHECKIN,UNCHECKOUT,CHECKOUT,UPDATE,LABEL,MERGE,BASELINE-CONTROL,MKACTIVITY
#BCOPY,BMOVE,BDELETE,BPROPFIND,BPROPPATCH,X-MS-ENUMATTS,UNBPROP,BPROP
</decoder>

