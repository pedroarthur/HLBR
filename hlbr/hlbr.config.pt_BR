#################################
#################################
##                             ##
## HLBR - Hogwash Light BR     ##
##                             ## 
## Arquivo de configuracao     ##
##                             ##
#################################
#################################





############################################################################
# Secao de Configuracao Geral
#
# Esta secao somente irah requerer modificacoes em casos de utilizacao de
# log centralizado. Geralmente, nao serah necessario fazer alteracoes.
#
# Name=nome do sensor
#
#    Utilizado para identificar o sensor (maquina com o IPS). Util no caso
#    de logs centralizados.
#   
# ID=ID do sensor
#
#    Assim como o Name, o ID servirah para identificar o sensor nos logs.
#
# Threads=1 / 0
#
#    O valor 0 farah com que o HLBR execute apenas uma thread para controlar
#    o daemon e as interfaces de rede. O valor 1 abrirah n+1 threads, onde n
#    eh a quantidade de interfaces de rede.
#
# AlertHeader=
#
#    Establece o formato a ser utilizado nas linhas de log. Os valores pos-
#    siveis sao: %sip (ip de origem), %dip (ip de destino), %sp (porta de
#    origem), %dp (porta de destino), %d (dia), %m (mes), %y (ano), %h
#    (hora), %min (minuto), %s (segundos), %usec (microsegundos), %pn
#    (sequencia do pacote), %ac (numero do alerta - comeca em 1 sempre que o
#    HLBR eh reiniciado).
############################################################################




<system>
Name=HLBR_1
ID=1
Threads=1
AlertHeader=%ac %d/%m/%y %h:%min:%s %sip:%sp->%dip:%dp
</system>





############################################################################
# Secao Interfaces
#
# Esta secao define quais interfaces de rede estarao disponiveis no host.
# Nao ha a necessidade de definir interfaces que nao serao utilizadas na
# bridge.
#
# interface eth0 / ppp0 / wlan0 / outra
#
#    Estabelece a interface de rede que serah utilizada.
#
# Type=linux_raw / obsd_bpf / osx_bpf / solaris_dlpi / tcpdump
#
#    Especifica qual eh o SO utilizado. Sao suportados: Linux, OpenBSD, 
#    MacOS X e Solaris. Ainda, poderah ser utilizada a opcao tcpdump para 
#    simular um trafego a partir de um arquivo no formato TCPDUMP (arquivo do
#    TCPDUMP, do Ethereal ou o log .dump do HLBR).
#
# Proto=Ethernet
#
#    Especifica o protocolo de camada 2 (OSI) a ser utilizado. O único
#    suportado atualmente eh o Ethernet.
#############################################################################




<interface eth0>
Type=linux_raw
Proto=Ethernet
</interface>

<interface eth1>
Type=linux_raw
Proto=Ethernet
</interface>




#############################################################################
# Secao IP Lists
#
# As IP Lists sao utilizadas para associar nomes a grupos de enderecos de
# host ou rede. Esses nomes serao utilizados nas regras para balizar a 
# origem ou destino ao qual a regra se aplicarah. As IP Lists tem o objetivo
# de facilitar a confeccao de redgras. Nas regras, poderao ser utilizados
# enderecos IP tambem.
#
# Poderao ser utilizados enderecos IP, enderecos de rede ou nomes de outras
# IP Lists jah definidas. As IP Lists poderao ter qualquer nome. No exemplo
# a seguir, xxx e yyy representam numeros (substituicao de IPs reais, apenas
# por seguranca e para fim de exemplo).
#
# Lembre-se que voce poderah criar as suas proprias IP Lists e tambem poderah
# deletar qualquer uma das listadas abaixo.
#############################################################################




<IPList www>
200.xxx.yyy.195
200.xxx.yyy.196
</list>

<IPList dns>
200.xxx.yyy.195
200.xxx.yyy.197
</list>

<IPList email>
200.xxx.yyy.198
</list>

<IPList firewall>
200.xxx.yyy.210
</list>

<IPList network>
200.xxx.yyy.192/26
</list>

<IPList others>
200.xxx.yyy.194
200.xxx.yyy.199
</list>

<IPList servers>
www
dns
email
firewall
others
200.xxx.yyy.209
</list>




############################################################################
# Secao Actions
#
# A acoes representam as respostas que serao adotadas quando um pacote com
# conteudo malicioso for detectado por uma das regras.
# 
# Sao as seguintes, as respostas possiveis:
#
# response=alert console
#
#    Envia a linha de log correspondente para a tela do terminal em execucao.
#
# response=alert file(arquivo_de_log)
#
#    Envia a linha de log para o arquivo em questao.
#
# response=alert syslog(facility, priority, options)
#
#    Designa um servidor de log remoto. (ainda nao testado)
#
# response=dump packet(arquivo de dump)
#
#    Envia o trafego malicioso para o arquivo de dump em questao, utilizando
#    formato TCPDUMP. Isso permitirah futuras analises de tal trafego.
#
# response=email(host, from, to, subject)
#
#    Envia cada evento de log para o e-mail especificado. (ainda nao testado)
#
# response=drop
#
#    Descarta o pacote malicioso (nao reseta ou finaliza a conexao).
#
# Obs: o path dos logs poderah ser definido nas respostas ou com a opcao -l
# do daemon HLBR (digite # hlbr para mais informacoes).
#############################################################################




<action action1>
response=alert file(/var/log/hlbr/hlbr.log)
response=dump packet(/var/log/hlbr/hlbr.dump)
response=drop
</action>

<action action2>
response=alert file(/var/log/hlbr/hlbr-2.log)
response=dump packet(/var/log/hlbr/hlbr-2.dump)
</action>

<action virus>
response=alert file(/var/log/hlbr/virus.log)
response=dump packet(/var/log/hlbr/virus.dump)
response=drop
</action>




############################################################################
# Secao Routing
#
# Esta secao eh responsavel por estabelecer a bridge, utilizando as
# intrfaces previamente definidas.
#
# As opcoes possiveis sao:
#
# SBridge(interface_1, interface_2)
#
#    SBridge serve para colocar 2 interfaces de rede (e nao mais do que isso)
#    em bridge. Eh um metodo rapido e eficiente, fazendo a simples passagem
#    de informacoes entre os adaptadores de rede.
#
# MacFilter(interface_1, interface_2, interface_3....)
#
#    O MacFilter pode ser utilizado com 2 ou mais interfaces de rede. Baseia-
#    -se no endereco MAC para definir o adaptador de rede de destino. Eh mais
#    lento do que o SBridge. No entanto, pode ser utilizado no lugar da
#    SBridge, caso esta esteja desarmando (raramente isso ocorrerah). O
#    trafego inicial de pacotes poderah demorar alguns instantes.
#
# Broadcast()
#    
#    Pode ser utilizado, juntamente com as opcoes anteriores, caso o Linux
#    esteja duplicando pacotes ARP. Uma situacao nao muito comum. (ainda nao
#    testado)
#
# SIP(interface ou IP List)
#
#    Utilizado com Mac Filter para definir por qual interface deverah ser
#    enviado um pacote com um determinado endereco IP de origem. Util quando
#    um pacote tiver que atravessar uma determinada rede para atingir outra
#    e isso nao estiver declarado nos roteadores da rede. (ainda nao testado)
#
# DIP(interface ou IP List)
#
#    Similar ao SIP, mas para um IP de destino. (ainda nao testado)
#
# Obs: Apesar de nao ser um uso nobre, o HLBR poderah ser utilizado como
#      IDS. Para isso, comente toda a secao routing.
############################################################################




<routing>
SBridge(eth0, eth1)
</routing>




############################################################################
# Secao Decoder
#
# Configuracoes especiais dos decoders
#
#
# decoder http
# Defina aqui, separado por virgulas, os metodos que trafegam em sua rede
############################################################################




<decoder http>
OPTIONS,GET,HEAD,POST,PUT,DELETE,TRACE,CONNECT
#COPY,MOVE,PROPFIND,PROPPATCH,UNLOCK,LOCK,MKCOL,NOTIFY,POLL
#VERSION-CONTROL,REPORT,CHECKIN,UNCHECKOUT,CHECKOUT,UPDATE,LABEL,MERGE,BASELINE-CONTROL,MKACTIVITY
#BCOPY,BMOVE,BDELETE,BPROPFIND,BPROPPATCH,X-MS-ENUMATTS,UNBPROP,BPROP
</decoder>
